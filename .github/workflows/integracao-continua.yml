name: CI Voll Med

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Configura JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Configura o Docker Compose
      run: |
        sudo rm /usr/local/bin/docker-compose
        curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
        
    - name: Roda o Docker Compose
      run: docker-compose up -d && docker images
      
    - name: Executa os testes unitários
      run: mvn -B verify

    - name: Realiza a build
      run: mvn package --file pom.xml -DskipTests

    - name: Gera JaCoCo coverage report
      run: mvn jacoco:prepare-agent verify

    - name: Análise do SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn sonar:sonar -Dsonar.projectKey=gabi-teste_vollmed

    - name: Deploy para EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }} # Chave privada SSH para se conectar à instância EC2
        USER: ubuntu # Usuário SSH na instância EC2
        HOST: 3.14.85.170 # Endereço IP da instância EC2
      run: |
        echo "$PRIVATE_KEY" > deploy_key.pem
        chmod 600 deploy_key.pem

        # Compacta a imagem Docker 
        docker save -o vollmed-test-sonarcloud_api.tar vollmed-test-sonarcloud_api

        scp -o StrictHostKeyChecking=no -i deploy_key.pem vollmed-test-sonarcloud_api.tar $USER@$HOST:/home/ubuntu/
        scp -o StrictHostKeyChecking=no -i deploy_key.pem init.sql $USER@$HOST:/home/ubuntu/
        scp -o StrictHostKeyChecking=no -i deploy_key.pem docker-compose-prod.yaml $USER@$HOST:/home/ubuntu/
        scp -o StrictHostKeyChecking=no -i deploy_key.pem script_deploy.sh $USER@$HOST:/home/ubuntu/

        ssh -i deploy_key.pem $USER@$HOST "chmod +x script_deploy.sh && ./script_deploy.sh"
        
        
      
